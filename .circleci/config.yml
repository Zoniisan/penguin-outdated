# circleCIのバージョン指定
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: ${CC_TEST_REPORTER_ID}
    machine:
      image: circleci/classic:edge
    steps:
      # Djangoのテストを実行
      - checkout
      - run:
          name: docker-compose up
          command: docker-compose -f docker-compose.ci.yml up -d
      - run:
          name: sleep for launch db to migrate at Django
          command: sleep 10
      - run:
          name: migrate
          command: docker-compose -f docker-compose.ci.yml exec web python manage.py migrate
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            docker-compose -f docker-compose.ci.yml exec web coverage run manage.py test
            ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?
      - run:
          name: docker-compose -f docker-compose.ci.yml down
          command: docker-compose -f docker-compose.ci.yml down
  # zoniichan.com にSSH接続し、デプロイを実行
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # CircleCIに登録した秘密鍵を呼び出す。
      - add_ssh_keys:
          fingerprints:
            - "9e:5d:b6:e3:17:31:37:f9:07:5c:b3:1c:90:16:72:15"
      - run: ssh ${USER_NAME}@${HOST_NAME} 'cd penguin && git pull origin master && docker-compose up --build -d'

# テストが成功した場合のみ、deployを実行するようにします。
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # masterブランチがpushされた場合のみdeployするようにする。
          filters:
            branches:
              only: master
